{"version":3,"sources":["pages/Header.js","pages/Home.js","router.config.js","pages/Doc.js","pages/Core.js","pages/Guide.js","pages/Api.js","pages/Hooks.js","pages/Tuto.js","pages/Blog.js","pages/Comm.js","pages/Login.js","App.js","index.js"],"names":["Header","activeClassName","exact","to","Home","props","style","textAlign","onClick","history","push","routes","path","component","withRouter","console","log","className","from","map","route","i","RouteWithSubRoutes","key","pri","Login","localStorage","setItem","replace","location","state","PrivateRoute","children","rest","render","getItem","pathname","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2a53abb0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","// import React from'react';\r\n// import Buttons from '../components/Buttons';\r\n// import List from '../components/List'\r\n// class Home extends React.Component{\r\n//     constructor(props){\r\n//       super(props);\r\n//       this.state = {\r\n//         data:[]\r\n//       }\r\n//       // this.handleClick = this.handleClick.bind(this)\r\n//     }\r\n//     componentDidMount(){\r\n//       fetch('https://cnodejs.org/api/v1/topics')\r\n//       .then(res=>res.json())\r\n//       .then( ({data}) => {\r\n//         this.setState({data})\r\n//       })\r\n//     }\r\n//     getData = (page)=>{\r\n//       fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n//       .then(res=>res.json())\r\n//       .then( ({data}) => {\r\n//         this.setState({data})\r\n//       })\r\n//     }\r\n//     render(){\r\n//       const { data } = this.state;\r\n      \r\n//       return <div>\r\n//        <Buttons getData={this.getData}/>\r\n//         <List data={data}/>\r\n//       </div>\r\n//     }\r\n//   }\r\n\r\n  //命名导出\r\n//   export {Home}\r\n  //默认导出 (只能导出一个)\r\n  // export default Home;\r\n\r\n\r\n  //----------------\r\n  import React from 'react'\r\n\r\n  const Home = (props) => {\r\n    //   console.log(props);\r\n      return (\r\n          <div style={{textAlign:'center'}}>\r\n              <h2>React</h2>\r\n              <p>用于构建用户界面的 JavaScript 库</p>\r\n              <div>\r\n                  <button onClick={\r\n                      ()=>props.history.push('/doc')\r\n                  }>快速开始</button>\r\n                  <button onClick={\r\n                      ()=>props.history.push('/tuto')\r\n                  }>入门教程</button>\r\n              </div>\r\n          </div>\r\n      )\r\n  }\r\n  \r\n  export default Home","\r\n\r\n\r\nimport Home from './pages/Home';\r\nimport Doc from './pages/Doc';\r\nimport Tuto from './pages/Tuto';\r\nimport Blog from './pages/Blog';\r\nimport Comm from './pages/Comm';\r\nimport Login from './pages/Login';\r\nimport Core from './pages/Core';\r\nimport Guide from './pages/Guide';\r\nimport Api from './pages/Api';\r\nimport Hooks from './pages/Hooks';\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path:'/',\r\n        exact:true,\r\n        component:Home\r\n    },\r\n    {\r\n        path:'/doc',\r\n        component:Doc,\r\n        pri:true,\r\n        routes:[\r\n   \r\n            {\r\n                path:'/doc/core',\r\n                component:Core,\r\n            },\r\n            {\r\n                path:'/doc/guide',\r\n                component:Guide,\r\n            },\r\n            {\r\n                path:'/doc/api',\r\n                component:Api,\r\n            },\r\n            {\r\n                path:'/doc/hooks',\r\n                component:Hooks,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path:'/tuto',\r\n        component:Tuto,\r\n        pri:true\r\n    },\r\n    {\r\n        path:'/blog',\r\n        component:Blog\r\n    },\r\n    {\r\n        path:'/comm',\r\n        component:Comm\r\n    },\r\n    {\r\n        path:'/login',\r\n        component:Login\r\n    },\r\n]\r\nexport default routes;\r\n","import React from 'react'\r\n\r\nimport {RouteWithSubRoutes} from '../App';\r\n\r\nimport {\r\n    NavLink, Redirect,\r\n    withRouter,\r\n    Switch,\r\n} from 'react-router-dom';\r\nimport './doc.css';\r\n\r\n// const DocContent = () => {\r\n//     return <h1>\r\n//         { match.params.type }\r\n//     </h1>\r\n// }\r\n// const core = () => {\r\n//     return <h1>core</h1>\r\n// }\r\n// const guide = () => {\r\n//     return <h1>guide</h1>\r\n// }\r\n// const api = () => {\r\n//     return <h1>api</h1>\r\n// }\r\n// const hooks = () => {\r\n//     return <h1>hooks</h1>\r\n// }\r\n\r\nconst Doc = ({ routes }) => {\r\n    console.log(routes);\r\n\r\n\r\n    return (\r\n        <div className='doc'>\r\n            <div \r\n            className=\"content\"\r\n            >\r\n                <Redirect \r\n                from='/doc' \r\n                to='/doc/core' \r\n                />\r\n                <Switch>\r\n                    {\r\n                        routes.map((route ,i) => {\r\n                            return (\r\n                            <RouteWithSubRoutes  \r\n                            {...route} key={i}/>)\r\n                    })\r\n                    }\r\n                </Switch>\r\n\r\n                {/* 嵌套路由 */}\r\n                {/* <Route path='/doc/:type' component={ DocContent } /> */}\r\n                {/* <Route path='/doc/core' component={ Core } />\r\n                <Route path='/doc/guide' component={ guide } />\r\n                <Route path='/doc/api' component={ api } />\r\n                <Route path='/doc/hooks' component={ hooks } />\r\n\r\n                <Redirect from='/doc' to='/doc/core' /> */}\r\n            </div>\r\n\r\n            <ol>\r\n                <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n                <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n                <li><NavLink to='/doc/api'>API</NavLink></li>\r\n                <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n//普通一个高阶组件\r\nexport default withRouter(Doc);","import React from 'react'\r\n\r\nconst Core = () => {\r\n    return (\r\n        <div>\r\n            这是Core.js!\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Core;","import React from 'react'\r\n\r\nconst Guide = () => {\r\n    return (\r\n        <div>\r\n            这是Guide！\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guide","import React from 'react'\r\n\r\nconst Api = () => {\r\n    return (\r\n        <div>\r\n            这是Api.js!\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Api;","import React from 'react'\r\n\r\nconst Hooks = () => {\r\n    return (\r\n        <div>\r\n            这是Hooks！\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hooks;","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            Comm\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm","import React from 'react'\r\n\r\nconst Login = (props) =>{\r\n    const Login = () =>{\r\n        localStorage.setItem('userinfo','tom')\r\n        props.history.replace(props.location.state)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <button onClick={Login}>登录</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Login","// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\nimport React from 'react';\nimport { BrowserRouter as Router,NavLink, Redirect,Link, Route, Switch } from 'react-router-dom'\nimport Header from './pages/Header';\nimport routes from './router.config';\nimport Home from './pages/Home';\nimport Doc from './pages/Doc';\nimport Tuto from './pages/Tuto';\nimport Blog from './pages/Blog';\nimport Comm from './pages/Comm';\nimport Login from './pages/Login';\n\n\nconst App = () => {\n\treturn <Router>\n\t\t<Header />\n\t\t<Switch>\n\t\t\t{\n\t\t\t\troutes.map((rest, i) => {\n\t\t\t\t\treturn <RouteWithSubRoutes  {...rest} key={i} />\n\t\t\t\t})\n\n\t\t\t\t// < div >\n\t\t\t\t// \t<Route exact path='/' component={Home} />\n\t\t\t\t// \t<PrivateRoute path='/doc' component={Doc} />\n\t\t\t\t// \t{/* <Route path='/doc/:id' component={Doc} /> */}\n\t\t\t\t// \t<PrivateRoute path='/tuto' component={Tuto} />\n\t\t\t\t// \t<Route path='/blog' component={Blog} />\n\t\t\t\t// \t<Route path='/comm' component={Comm} />\n\t\t\t\t// \t<Route path='/login' component={Login} />\n\t\t\t\t// </div>\n\n\t\t\t}\n\t\t</Switch>\n\t</Router >\n}\n\n\nfunction PrivateRoute({ children, ...rest }) {\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={({ location }) =>\n\t\t\t\tlocalStorage.getItem('userinfo')\n\t\t\t\t\t? children\n\t\t\t\t\t: (\n\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\tto={{ pathname: \"/login\",\n\t\t\t\t\t\t\t\tstate: location\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t/>);\n}\n\nexport function RouteWithSubRoutes(route, i) {\n\tif (route.pri) {\n\t\treturn (\n\t\t\t<PrivateRoute\n\t\t\t\tkey={i}\n\t\t\t\tpath={route.path}>\n\t\t\t\t<Route\n\t\t\t\t\tpath={route.path}\n\t\t\t\t\trender={props => (\n\t\t\t\t\t\t<route.component\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\troutes={route.routes} />\n\t\t\t\t\t)} />\n\t\t\t</PrivateRoute>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Route\n\t\t\t\tpath={route.path}\n\t\t\t\trender={props => (\n\t\t\t\t\t<route.component\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\troutes={route.routes} />\n\t\t\t\t)} />)\n\t}\n}\n\nexport default App;\n\n\n\n\n\n\n// const App = ()=>{\n// \treturn <Router>\n// \t\t<Header />\n// \t\t<Switch>\n// \t\t\t{\n// \t\t\t\troutes.map((route,i)=>{\n// \t\t\t\t\treturn <RouteWithSubRoutes key={i} {...route} />\n// \t\t\t\t})\n\n\n\n\n\n\n// \t\t\t}\n// \t\t</Switch>\n// \t</Router>\n// }\n\n\n// import React from 'react';\n// import { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\n// import Header from './pages/Header';\n// import routes from './router.config';\n// import {Button,TabBar} from 'antd-mobile'\n// import Mytab from './taobao/Mytab';\n// import Home from './taobao/Home';\n// import Cart from './taobao/Cart';\n\n// const App = ()=>{\n// \treturn <Router>\n// \t\t<Switch>\n// \t\t\t<Route exact path='/' component={Home} />\n// \t\t\t<Route path='/cart' component={Cart} />\n// \t\t</Switch>\n// \t\t<Mytab />\n// \t</Router>\n// }\n// export default App;\n\n\n// class App extends React.Component {\n// \tconstructor(props) {\n// \t  super(props);\n// \t  this.state = {\n// \t\tselectedTab: 'blueTab',\n// \t  };\n// \t}\n// \trender() {\n// \t  return (\n// \t\t<div style={{ position: 'fixed', height: '100%', width: '100%', top: 0 }}>\n// \t\t  <TabBar\n// \t\t\tunselectedTintColor=\"#949494\"\n// \t\t\ttintColor=\"#33A3F4\"\n// \t\t\tbarTintColor=\"white\"\n// \t\t  >\n// \t\t\t<TabBar.Item\n// \t\t\t  title=\"Life\"\n// \t\t\t  key=\"Life\"\n// \t\t\t  icon={<div style={{\n// \t\t\t\twidth: '22px',\n// \t\t\t\theight: '22px',\n// \t\t\t\tbackground: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat' }}\n// \t\t\t  />\n// \t\t\t  }\n// \t\t\t  selectedIcon={<div style={{\n// \t\t\t\twidth: '22px',\n// \t\t\t\theight: '22px',\n// \t\t\t\tbackground: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat' }}\n// \t\t\t  />\n// \t\t\t  }\n// \t\t\t  selected={this.state.selectedTab === 'blueTab'}\n// \t\t\t  badge={1}\n// \t\t\t  onPress={() => {\n// \t\t\t\tthis.setState({\n// \t\t\t\t  selectedTab: 'blueTab',\n// \t\t\t\t});\n// \t\t\t  }}\n// \t\t\t  data-seed=\"logId\"\n// \t\t\t>\n// \t\t\t  首页\n// \t\t\t</TabBar.Item>\n\n// \t\t\t<TabBar.Item\n// \t\t\t  icon={//wei\n// \t\t\t\t<div style={{\n// \t\t\t\t  width: '22px',\n// \t\t\t\t  height: '22px',\n// \t\t\t\t  background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat' }}\n// \t\t\t\t/>\n// \t\t\t  }\n// \t\t\t  selectedIcon={\n// \t\t\t\t<div style={{\n// \t\t\t\t  width: '22px',\n// \t\t\t\t  height: '22px',\n// \t\t\t\t  background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat' }}\n// \t\t\t\t/>\n// \t\t\t  }\n// \t\t\t  title=\"Koubei\"\n// \t\t\t  key=\"Koubei\"\n// \t\t\t  badge={'new'}\n// \t\t\t  selected={this.state.selectedTab === 'redTab'}\n// \t\t\t  onPress={() => {\n// \t\t\t\tthis.setState({\n// \t\t\t\t  selectedTab: 'redTab',\n// \t\t\t\t});\n// \t\t\t  }}\n// \t\t\t  data-seed=\"logId1\"\n// \t\t\t>\n// \t\t\t\t<Button onClick={()=>{}} type=\"primary\">click</Button>\n// \t\t\t  文档页\n// \t\t\t</TabBar.Item>\n\n// \t\t\t<TabBar.Item\n// \t\t\t  icon={\n// \t\t\t\t<div style={{\n// \t\t\t\t  width: '22px',\n// \t\t\t\t  height: '22px',\n// \t\t\t\t  background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat' }}\n// \t\t\t\t/>\n// \t\t\t  }\n// \t\t\t  selectedIcon={\n// \t\t\t\t<div style={{\n// \t\t\t\t  width: '22px',\n// \t\t\t\t  height: '22px',\n// \t\t\t\t  background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat' }}\n// \t\t\t\t/>\n// \t\t\t  }\n// \t\t\t  title=\"Friend\"\n// \t\t\t  key=\"Friend\"\n// \t\t\t  dot\n// \t\t\t  selected={this.state.selectedTab === 'greenTab'}\n// \t\t\t  onPress={() => {\n// \t\t\t\tthis.setState({\n// \t\t\t\t  selectedTab: 'greenTab',\n// \t\t\t\t});\n// \t\t\t  }}\n// \t\t\t>\n// \t\t\t  教程\n// \t\t\t</TabBar.Item>\n// \t\t\t<TabBar.Item\n// \t\t\t  icon={{ uri: 'https://zos.alipayobjects.com/rmsportal/asJMfBrNqpMMlVpeInPQ.svg' }}\n// \t\t\t  selectedIcon={{ uri: 'https://zos.alipayobjects.com/rmsportal/gjpzzcrPMkhfEqgbYvmN.svg' }}\n// \t\t\t  title=\"My\"\n// \t\t\t  key=\"my\"\n// \t\t\t  selected={this.state.selectedTab === 'yellowTab'}\n// \t\t\t  onPress={() => {\n// \t\t\t\tthis.setState({\n// \t\t\t\t  selectedTab: 'yellowTab',\n// \t\t\t\t});\n// \t\t\t  }}\n// \t\t\t>\n// \t\t\t  社区页\n// \t\t\t</TabBar.Item>\n// \t\t  </TabBar>\n// \t\t</div>\n// \t  );\n// \t}\n//   }\n// export default App;\n\n\n\n","// import React from 'react';\n// // import ReactDOM from 'react-dom';\n// // import './index.css';\n// // import App from './App';\n// // import * as serviceWorker from './serviceWorker';\n\n//  let ele =  <h1 id=\"title\" className=\"tit\">\n   \n//    react\n//    <div>hello</div>\n//    <div>{['hello','world']}</div>\n//    <div>hello</div>\n//    </h1>;\n// //=>\n// // let ele = React.cloneElement(\n// //   'h1',\n// //   {id:'title'},\n// //   React.cloneElement('div',{},'hello'),\n// //   'react'\n// //   )\n\n// console.log(ele);\n\n// //将JSX渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     //解构\n//     const{type,props}=eleObj;\n//     //创建第一层节点\n//     let ele = document.createElement(type);\n//     //遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//           const txtNode = document.creatTextNode(props[prop]);\n//           ele.appendChild(txtNode);\n//           break;\n//         }\n\n//         //将第一层节点对象的子元素添加进去\n//         props.children.forEach(child=>{\n//           if(typeof child == 'string'){\n//             const txtNode = document.creatTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//               ReactDOM.render(child,ele);\n//           }\n//         })\n//       }\n//       else{\n//         ele[prop] = props[prop];\n//       }\n      \n//     }\n\n//     //将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n// ReactDOM.render(\n//    ele,\n//   document.getElementById('root')\n// );\n\n// /* \n//   1.原生js,DOM操作(JQ)\n//   2.Reatc: 开发效率高，性能高\n//   3.环境搭建，创建一个项目、运行\n//   4.JSX语法\n// */\n\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n\n// // serviceWorker.unregister();\n\n\n\n\n\n//*********************** */\n\n\n\n// import React from 'react';\n// import ReactDOM, { render } from 'react-dom';\n\n// import Control from './components/Control';\n// import Home from './pages/Home'\n// import Demo01 from './pages/Demo01'\n// import Hoc,{Detail} from './pages/Hoc' //都是Hoc.js文件  {}命名导出\n// import Hook from './pages/Hook'\n// import Context from './pages/context'\n// import App from './pages/App'\n// import Header from './pages/Header'\n// // console.log(Context);\n\n\n// ReactDOM.render(\n//   <App />,\n  \n//   document.getElementById('root')\n// );\n\n\n\n//---------------\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport App from './App';\n// import 'antd-mobile/dist/antd-mobile.css';\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n// let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\n// fetch(url, {\n//     method: 'post',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n// })\n// .then(res=>res.json())\n// .then(res=>console.log(res))\n\n\n\n\n//---------------------\n//index.js  zuoye\n\n// import React from 'react';\n// import ReactDOM, { render } from 'react-dom';\n// import TodoList from './xl/TodoList';\n\n\n// ReactDOM.render(\n\n//   <TodoList />,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n\n\n//组件声明\n//函数组件\n//UI(展示组件)，木偶文件\n//函数\n// function App(props){\n//   console.log(props);\n//   const {title,id} = props;\n//   return <div>\n//     <h1>组件</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n//时间\n//  let ele =  <h1 id=\"title\" className=\"tit\">\n//    <div>当前时间</div>\n//    {new Date().toLocaleString()}\n//  </h1>;\n\n//=>\n// let ele = React.cloneElement(\n//   'h1',\n//   {id:'title'},\n//   React.cloneElement('div',{},'hello'),\n//   'react'\n//   )\n\n// console.log(ele);\n\n//智能组价\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state={\n//       name:new Date().toLocaleString()\n//     }\n//     setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//     },1000)\n//   }\n//   render(){\n//     return  <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name}></App>\n//       {/* <App title='任意值1' id='app'></App>\n//       <App title='任意值1' id='app'></App>\n//       <App title='任意值1' id='app'></App> */}\n//     </div>\n//   }\n// }\n\n// import $ from 'jquery';\n\n// console.log($);\n\n// let List = (props) => {\n//   return <ul>\n//       {\n//         props.data.map(\n//           (item)=><li key={item.id}>{item.title}</li>\n//           )}\n//     </ul>\n//  }\n\n//  const Buttons = ()=>{\n//    const btns=[1,2,3,4,5];\n\n//    const handleClick=(num)=>{\n//      //事件对象\n//      console.log(num)\n//    }\n\n//     return <div>\n//       {\n//         btns.map((item)=>\n//           <button \n//           key={item} \n//           onClick={()=>handleClick(item)}\n//           >\n//             {item}\n//           </button>)\n//       }\n//     </div>\n//  }\n\n// alt shift + 上下键   复制一行\n// alt + 上下键         移动一行\n// 按住alt ，鼠标点击\n// Ctrl + shift + 左右键，选中整个单词\n// ctrl+shift+L \n\n\n// let List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key={item.id}>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }\n//     // this.handleClick = this.handleClick.bind(this)\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   getData = (page)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page='+page)\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   render(){\n//     const { data } = this.state;\n//     const btns = [1,2,3,4,5];\n//     return <div>\n//       {\n//         btns.map(\n//           (item)=>(\n//             <button \n//               key={item}\n//               onClick={()=>this.getData(item)}\n//             >\n//               {item}\n//             </button>\n//         ))\n//       }\n//       <List data={data}/>\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Home data='abc'/>,\n//   document.getElementById('root')\n// );\n\n/* \n  1.原生js,DOM操作(JQ)\n  2.Reatc: 开发效率高，性能高\n  3.环境搭建，创建一个项目、运行\n  4.JSX语法\n  */\n \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}